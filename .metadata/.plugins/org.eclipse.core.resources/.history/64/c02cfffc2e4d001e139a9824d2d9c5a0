<%@page import="java.time.LocalDateTime"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<!-- <meta http-equiv="Refresh" content="1"> -->
<title>08/autoRequest.jsp</title>
</head>
<body>
<h4>주기적인 갱신 자원을 대상으로 한 자동 요청</h4>
<input type="radio" name="dataType" value="html" checked/>HTML
<input type="radio" name="dataType" value="json" />JSON
<pre>
	server side : Refresh 헤더 사용 ( 동기 요청으로 DOM에 lock을 거는 경우 동작.)
	<span id="serverTimeArea"></span>
	client side : HTML(meta), JS(scheduling 함수)
</pre>
<script src="<%=request.getContextPath() %>/resources/js/jquery-3.7.1.min.js"></script>
<script>
/* 	$(document).on("ready", function(){
		$(serverTimeArea)
	}) */
	let fnSuccesses = {
		json : function(resp){
			serverTimeArea.innerHTML = resp.now;
		},
		html : function(resp){
			serverTimeArea.innerHTML = resp;
		}
	}
	let settings = {
		url : "<%=request.getContextPath()%>/08/serverTime",
		error : function(jqXhr, status, error) {
			console.log("jqXhr : ", jqXhr);
			console.log("status : ", status);
			console.log("errer : ", error);
		}
	};
	$.ajax(settings)
	
	setTimeout(() => {
		console.log("5초 뒤에 한번 실행하고 종료.")
	}, 5000);
	
	setInterval(() => {
		settings.dataType = $("[name=dataType]:checked").val();
		settings.success = fnSuccesses[settings.dataType];
		//닷노테이션과 연산배열구조의 차이점!
		$.ajax(settings)
	}, 1000);
</script>
</body>
</html>