/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-08-31 23:57:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._01;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;

public final class calendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.time.DayOfWeek");
    _jspx_imports_classes.add("java.time.LocalDate");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#displayMonth{\r\n");
      out.write("	margin : 0px auto;\r\n");
      out.write("}\r\n");
      out.write("#calendar{\r\n");
      out.write("	text-align : center;\r\n");
      out.write("	margin : 0px auto;\r\n");
      out.write("	margin-top : 30px;\r\n");
      out.write("	width : 70%;\r\n");
      out.write("	height : 400px;\r\n");
      out.write("}\r\n");
      out.write("#calendar th{\r\n");
      out.write("	border : 1px solid black;\r\n");
      out.write("	background-color: #ffffe0;\r\n");
      out.write("}\r\n");
      out.write("#calendar td{\r\n");
      out.write("	border : 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("#searchForm{\r\n");
      out.write("	display : inline;\r\n");
      out.write("	margin : 0px auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");

	SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
	Date now = new Date();
	String nowDate = format.format(now);

	String[] nowDateArr = nowDate.split("-");
	int currentYear = Integer.parseInt(nowDateArr[0]);
	int currentMonth = Integer.parseInt(nowDateArr[1]);
	int currentDate = Integer.parseInt(nowDateArr[2]);

	int year = currentYear;
	int month = currentMonth;
	int prevMonth = month-1;
	
	if(request.getParameter("year")!=null && request.getParameter("year")!=""){
		year = Integer.parseInt(request.getParameter("year"));
	}
	if(request.getParameter("month")!=null){
		month = Integer.parseInt(request.getParameter("month"));
	}
	
	
	LocalDate startDate = LocalDate.of(year, month, 1);
	DayOfWeek day = startDate.getDayOfWeek();
	int dayNum = day.getValue();
	
	int totalDate = 0;
	
	
	if(month==2){
		if(month%4==0 && month%400==0 || month%4==0 && month%100!=0){
			totalDate = 29;
		}else{
			totalDate = 28;
		}
	}
	if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){
		totalDate=31;
	}else if(month==4||month==6||month==9||month==11){
		totalDate=30;
	}
	
	
	/////
	int prevDate = 0;
	if(prevMonth==2){
		if(month%4==0 && month%400==0 || month%4==0 && month%100!=0){
			prevDate = 29;
		}else{
			prevDate = 28;
		}
	}
	if(prevMonth==1||prevMonth==3||prevMonth==5||prevMonth==7||prevMonth==8||prevMonth==10||prevMonth==12){
		prevDate=31;
	}else if(prevMonth==4||prevMonth==6||prevMonth==9||prevMonth==11){
		prevDate=30;
	}
	
	LocalDate endDate = LocalDate.of(year, month, totalDate);
	DayOfWeek lastDay = endDate.getDayOfWeek();
	int lastDayNum = lastDay.getValue();
	


      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table id=\"displayMonth\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td><button type=\"button\" id=\"btnPrev\" onclick=\"goPrev()\">◁◁</button></td>\r\n");
      out.write("		<td><h4> ");
      out.print(year );
      out.write(',');
      out.write(' ');
      out.print( month);
      out.write(" </h4></td>\r\n");
      out.write("				<td><button type=\"button\" id=\"btnNext\" onclick=\"goNext()\">▷▷</button></td>\r\n");
      out.write("		\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<div id=\"searchForm\">\r\n");
      out.write("<form>\r\n");
      out.write("YEAR<input type=\"text\" name=\"year\">\r\n");
      out.write("MONTH<select name=\"month\">\r\n");

	for(int i=1; i<=12; i++){

      out.write("\r\n");
      out.write("		<option>");
      out.print(i );
      out.write("</option>\r\n");

	}

      out.write("\r\n");
      out.write("	\r\n");
      out.write("</select>\r\n");
      out.write("<button type=\"submit\" >검색</button>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("<table id=\"calendar\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>일</th><th>월</th><th>화</th><th>수</th><th>목</th><th>금</th><th>토</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	");


		int cnt = 1;
		if(dayNum!=7){
	
      out.write("\r\n");
      out.write(" 			<tr>\r\n");
      out.write("	");

			for(int j=0; j<dayNum; j++){
	
      out.write("\r\n");
      out.write(" 				<td style=\"color:lightgray\">");
      out.print(prevDate-dayNum+j+1 );
      out.write("</td>\r\n");
      out.write("	");

			}
			for(int j=0; j<7-dayNum; j++){
			if(currentYear==year && currentMonth ==month && currentDate == cnt){
					
	
      out.write("\r\n");
      out.write(" 				<td style=\"background-color: #e0ffff\">");
      out.print(cnt);
      out.write("</td>\r\n");
      out.write("	");
	
				}else{
	
      out.write("\r\n");
      out.write("	 				<td>");
      out.print(j+1 );
      out.write("</td>\r\n");
      out.write("	");
			
				}
				cnt++;
			}
	
      out.write("\r\n");
      out.write(" 			</tr>\r\n");
      out.write("	");

		}
		totalDate = totalDate+1;
		while(cnt!=totalDate){
	
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("	");

			for(int j=0; j<7; j++){
				
				if(currentYear==year && currentMonth ==month && currentDate == cnt){
					
	
      out.write("\r\n");
      out.write(" 				<td style=\"background-color: #e0ffff\">");
      out.print(cnt);
      out.write("</td>\r\n");
      out.write("	");
	
				}else{
	
      out.write("\r\n");
      out.write("	 				<td>");
      out.print(cnt);
      out.write("</td>\r\n");
      out.write("	");
			
				}
				cnt++;
				if(cnt==totalDate) break;
			}
		}
		if(lastDayNum!=6){
			for(int i=1; i<=7-lastDayNum%7-1; i++){
	
      out.write("\r\n");
      out.write("					<td style=\"color:lightgray\">");
      out.print(i );
      out.write("</td>\r\n");
      out.write("	");

			}
		}
	
      out.write("\r\n");
      out.write("	 			</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<script>\r\n");
      out.write("function goPrev(){\r\n");
      out.write("	if(");
      out.print(month);
      out.write("==1){\r\n");
      out.write("		location.href = \"./calendar.jsp?year=");
      out.print(year-1);
      out.write("&month=12\";\r\n");
      out.write("	}else{\r\n");
      out.write("		location.href = \"./calendar.jsp?year=");
      out.print(year);
      out.write("&month=");
      out.print(month-1);
      out.write("\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function goNext(){\r\n");
      out.write("	if(");
      out.print(month);
      out.write("==12){\r\n");
      out.write("		location.href = \"./calendar.jsp?year=");
      out.print(year+1);
      out.write("&month=1\";\r\n");
      out.write("	}else{\r\n");
      out.write("		location.href = \"./calendar.jsp?year=");
      out.print(year);
      out.write("&month=");
      out.print(month+1);
      out.write("\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
